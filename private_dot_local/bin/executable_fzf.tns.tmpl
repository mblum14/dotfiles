#!/usr/bin/env bash
source "${BASH_SOURCE%/*}/lib/log.sh"
# [T]mux [N]ew [S]ession

function _fzf_tmux_windows() {
  gitlab.repos |
    fzf-tmux -p -- \
      --with-nth=1 \
      --header=$'\nPress CTRL-R to reload' \
      --bind="ctrl-r:reload(gitlab.repos --refresh)"
}

project_paths="$(_fzf_tmux_windows)"

if [ "x$project_paths" != "x" ]; then
  project="$(echo "${project_paths}" | awk '{print $1}' | tr -d ' ')"
  path="$(echo "${project_paths}" | awk '{print $2}' | tr -d ' ')"

  session="$(echo "${project}" | awk -F/ '{print $1}')"
  window="$(echo "${project}" | awk -F/ '{for (i=2; i<NF; i++) printf $i "/"; print $NF}' | tr -d ' ')"

  if [[ ! -d "${path}" ]]; then
    mkdir -p "$(dirname "${path}")" >/dev/null 2>&1
    git clone "git@gitlab.com:${project}.git" "${path}" >/dev/null 2>&1
  fi

  if tmux has-session -t="${session}" >/dev/null 2>&1; then
    tmux switch-client -t "${session}"
    if tmux list-panes -F "#{window_name}" | grep -qE "${window}\$"; then
      window_id="$(tmux list-panes -a -F "#{window_id} #{window_name}" | grep -P "${window}\$" | awk '{print $1}')"
      tmux select-window -t "${window_id}"
    else
      tmux new-window -a -n "${window}" -c "${path}" -t "${session}"
    fi
  else
    tmux new-session -d -s "${session}" -n "${window}" -c "${path}"
    if ! tmux attach -t "${session}" >/dev/null 2>&1; then
      tmux switch -t "${session}"
    fi
  fi
fi
